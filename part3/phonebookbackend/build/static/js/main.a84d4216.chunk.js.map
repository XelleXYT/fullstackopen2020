{"version":3,"sources":["components/Filter.js","services/persons.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","props","newFilter","handleFilterChange","value","onChange","baseUrl","axios","get","then","response","data","newObject","post","oldObject","delete","id","updatedObject","put","PersonForm","persons","setPersons","newName","setNewName","handleNameChange","newNumber","setNewNumber","handleNumberChange","setMessage","setMessageType","onSubmit","event","preventDefault","filter","person","name","length","number","window","confirm","personObject","personService","refreshedPersons","setTimeout","alert","returnedPerson","concat","type","Persons","toLowerCase","includes","map","key","onClick","catch","n","deletePerson","Notification","message","className","App","useState","setNewFilter","messageType","useEffect","initialPersons","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a84d4216.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    const {newFilter, handleFilterChange} = props\r\n\r\n    return (\r\n        <div>filter shown with <input value={newFilter} onChange={handleFilterChange} /></div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getPersons = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst createPerson = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}  \r\n\r\nconst deletePerson = oldObject => {\r\n    const request = axios.delete(`${baseUrl}/${oldObject.id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updatePerson = updatedObject => {\r\n    const request = axios.put(`${baseUrl}/${updatedObject.id}`, updatedObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getPersons, createPerson, deletePerson, updatePerson }","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst PersonForm = (props) => {\r\n    const{ persons, setPersons, newName, setNewName, handleNameChange, newNumber, setNewNumber, handleNumberChange, setMessage, setMessageType} = props\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n        if (persons.filter(person => person.name === newName).length !== 0) {\r\n            const person = persons.filter(person => person.name === newName)[0]\r\n            if (person.number !== newNumber) {\r\n                if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\r\n                    const personObject = {\r\n                        id: person.id,\r\n                        name: person.name,\r\n                        number: newNumber\r\n                    }\r\n                    personService\r\n                        .updatePerson(personObject)\r\n                        .then(() => {\r\n                            personService\r\n                                .getPersons()\r\n                                .then(refreshedPersons => {\r\n                                    setPersons(refreshedPersons)\r\n                                })\r\n                        })\r\n                    \r\n                    setMessageType('success')\r\n                    setMessage(`Updated ${newName} number`)\r\n                    \r\n                    setNewName('')\r\n                    setNewNumber('')\r\n\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                }\r\n            } else {\r\n                alert(`${newName} is already added to phonebook with that number`)\r\n            }\r\n        } else {\r\n            const personObject = {\r\n                id: persons.length + 1,\r\n                name: newName,\r\n                number: newNumber\r\n            }\r\n            personService\r\n                .createPerson(personObject)\r\n                .then(returnedPerson => {\r\n                    setPersons(persons.concat(returnedPerson))\r\n                    \r\n                    setMessageType('success')\r\n                    setMessage(`Added ${newName}`)\r\n                    \r\n                    setNewName('')\r\n                    setNewNumber('')\r\n\r\n                    setTimeout(() => {\r\n                        setMessage(null)\r\n                    }, 5000)\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={addPerson}>\r\n            <div>\r\n                name: <input value={newName} onChange={handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={newNumber} onChange={handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\nimport personService from '../services/persons'\r\n\r\nconst Persons = (props) => {\r\n    const {persons, setPersons, newFilter, setMessage, setMessageType} = props\r\n\r\n    const deletePerson = (person) => {\r\n        if(window.confirm(`Delete ${person.name} ?`)){\r\n        personService\r\n            .deletePerson(person)\r\n            .then(() => {\r\n                personService\r\n                    .getPersons()\r\n                    .then(refreshedPersons => {\r\n                        setPersons(refreshedPersons)\r\n                    })\r\n            })\r\n            .catch(() => {\r\n                setMessageType('error')\r\n                setMessage(`Information of ${person.name} has been removed from server`)\r\n\r\n                setPersons(persons.filter(n => n.id !== person.id))\r\n\r\n                setTimeout(() => {\r\n                    setMessage(null)\r\n                }, 5000)\r\n            })\r\n        }\r\n    }\r\n\r\n    const filterPersons = () => {\r\n        const auxPersons = persons.filter( (person) => (\r\n            person.name.toLowerCase().includes(newFilter.toLowerCase())\r\n        ))\r\n        return(\r\n            auxPersons.map((person)=>(\r\n                <div key={person.id}>\r\n                    {person.name} {person.number} <button onClick={() => {deletePerson(person)}}>delete</button>\r\n                </div>\r\n            ))\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {filterPersons()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\nconst Notification = (props) => {\r\n    const { message, type } = props\r\n\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className={type}>\r\n        {message}\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageType, setMessageType ] = useState('error')\n\n  const handleNameChange = event => setNewName(event.target.value)\n  const handleNumberChange = event => setNewNumber(event.target.value)\n  const handleFilterChange = event => setNewFilter(event.target.value)\n\n  useEffect(() => {\n    personService\n      .getPersons()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  },[])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} type={messageType}/>\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n      <h3>Add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} newName={newName} setNewName={setNewName} handleNameChange={handleNameChange} newNumber={newNumber} setNewNumber={setNewNumber} handleNumberChange={handleNumberChange} setMessage={setMessage} setMessageType={setMessageType} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} setPersons={setPersons} newFilter={newFilter} setMessage={setMessage} setMessageType={setMessageType}/>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}